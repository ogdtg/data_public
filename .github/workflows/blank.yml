# This is a basic workflow to help you get started with Actions

name: transform_push

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  #push:
   # branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  transform_data:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - name: Checkout1
      - uses: actions/checkout@v3 # Checkout branch into the runner
        with:
          path: "src"
          ref: "main"
          persist-credentials: false
          
      - name: Checkout2
      - uses: actions/checkout@v3 # Checkout branch into the runner
        with:
          path: "dest"
          ref: "main"
          repository: ogdtg/data_public
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0
          persist-credentials: true
      
      - name: Use R
      - uses: r-lib/actions/setup-r@v3 # Set up R runtime
        with:
          r-version: '4.2.0'
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev libssl-dev
      - name: Setup renv # Set up R env to install packages
        run: |
          install.packages(c('readxl','dplyr','renv'))
        shell: Rscript {0}
        
      - uses: actions/cache@v2 # Cache packages so won't be compiled everytime job is run
        with:
          path: ~/.local/share/renv
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-
      - name: Install dependencies # Install the dependencies eg. Dplyr, tidyverse etc
        run: renv::restore()
        shell: Rscript {0}
  
      - name: Generate data # Run the script
        run: source("etl.R")
        shell: Rscript {0}
        
      - name: Check fro new files
        working-directory: dest
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git pull
          git add Output
          git diff-index --quiet HEAD || (git commit -m "update data" && git push)
